{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-06-02T17:15:36.869713Z", "invocation_id": "d9e7a3d0-0dcd-45d8-ad5e-4b156be6855d", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T17:15:13.395722Z", "completed_at": "2025-06-02T17:15:13.405695Z"}, {"name": "execute", "started_at": "2025-06-02T17:15:13.406693Z", "completed_at": "2025-06-02T17:15:35.795587Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 22.400861978530884, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bcc3ad-0105-7168-0006-8fdb0031532a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.fair_pricing_radar.mart_route_geographic", "compiled": true, "compiled_code": "\n\nWITH\n    ---------------------------------------------------------------------------\n    -- 1. Base route-level aggregates\n    ---------------------------------------------------------------------------\n    route_metrics AS (\n        SELECT\n            f.route,\n            SPLIT_PART(f.route, '-', 1) AS origin,\n            SPLIT_PART(f.route, '-', 2) AS destination,\n            COUNT(*)                        AS total_bookings,\n            SUM(any_rule_flag)              AS flagged_bookings,\n            100.0 * SUM(any_rule_flag) / COUNT(*) AS pct_flagged,\n            AVG(total_fare)                 AS avg_fare\n        FROM FLIGHT_PRICES.WALRUS_PUBLIC.mart_pricing_features f\n        GROUP BY f.route\n    ),\n\n    ---------------------------------------------------------------------------\n    -- 2. Per-booking median(total_fare)\n    ---------------------------------------------------------------------------\n    route_medians AS (\n        SELECT\n            route,\n            MEDIAN(total_fare) OVER (PARTITION BY route) AS median_fare\n        FROM FLIGHT_PRICES.WALRUS_PUBLIC.mart_pricing_features\n    ),\n\n    ---------------------------------------------------------------------------\n    -- 3. Collapse to one row per route\n    ---------------------------------------------------------------------------\n    one_median_per_route AS (\n        SELECT\n            route,\n            MAX(median_fare) AS median_fare\n        FROM route_medians\n        GROUP BY route\n    ),\n\n    ---------------------------------------------------------------------------\n    -- 4. Join median back, compute route-level extra cost\n    ---------------------------------------------------------------------------\n    route_with_median AS (\n        SELECT\n            rm.route,\n            rm.origin,\n            rm.destination,\n            rm.total_bookings,\n            rm.flagged_bookings,\n            rm.pct_flagged,\n            rm.avg_fare,\n            om.median_fare,\n            SUM(\n                CASE\n                    WHEN f.any_rule_flag = 1\n                         THEN f.total_fare - om.median_fare\n                    ELSE 0\n                END\n            ) AS total_extra_cost\n        FROM FLIGHT_PRICES.WALRUS_PUBLIC.mart_pricing_features f\n        JOIN route_metrics        rm ON f.route = rm.route\n        JOIN one_median_per_route om ON rm.route = om.route\n        GROUP BY\n            rm.route,\n            rm.origin,\n            rm.destination,\n            rm.total_bookings,\n            rm.flagged_bookings,\n            rm.pct_flagged,\n            rm.avg_fare,\n            om.median_fare\n    ),\n\n    ---------------------------------------------------------------------------\n    -- 5. Merge legacy 24-row seed with full airport_coordinates CSV\n    ---------------------------------------------------------------------------\n    airport_seed_union AS (\n        SELECT\n            UPPER(iata_code)       AS iata_code,\n            lat_deg                AS airport_lat,\n            lon_deg                AS airport_lon\n        FROM FLIGHT_PRICES.WALRUS_PUBLIC.seed_airport_geo\n\n        UNION ALL\n\n        SELECT\n            UPPER(iata_code)       AS iata_code,\n            latitude               AS airport_lat,\n            longitude              AS airport_lon\n        FROM FLIGHT_PRICES.WALRUS_PUBLIC.airport_coordinates\n        WHERE   iata_code IS NOT NULL\n            AND latitude  IS NOT NULL\n            AND longitude IS NOT NULL\n    ),\n\n    airport_geo AS (\n        SELECT\n            iata_code,\n            MAX(airport_lat) AS airport_lat,\n            MAX(airport_lon) AS airport_lon\n        FROM airport_seed_union\n        GROUP BY iata_code\n    )\n\nSELECT\n    r.route,\n    r.origin,\n    r.destination,\n    r.total_bookings,\n    r.flagged_bookings,\n    r.pct_flagged,\n    r.avg_fare,\n    r.total_extra_cost,\n    og.airport_lat  AS origin_lat,\n    og.airport_lon  AS origin_lon,\n    dg.airport_lat  AS destination_lat,\n    dg.airport_lon  AS destination_lon\nFROM route_with_median r\nLEFT JOIN airport_geo og ON r.origin      = og.iata_code\nLEFT JOIN airport_geo dg ON r.destination = dg.iata_code\nWHERE\n      og.airport_lat  IS NOT NULL\n  AND og.airport_lon  IS NOT NULL\n  AND dg.airport_lat  IS NOT NULL\n  AND dg.airport_lon  IS NOT NULL\n  AND r.total_bookings >= 1000", "relation_name": "FLIGHT_PRICES.WALRUS_PUBLIC.mart_route_geographic", "batch_results": null}], "elapsed_time": 33.67381238937378, "args": {"state_modified_compare_more_unrendered_values": false, "cache_selected_only": false, "strict_mode": false, "source_freshness_run_project_hooks": false, "select": ["mart_route_geographic"], "log_path": "C:\\Users\\Mattia\\Business_Challenge\\fair_pricing_radar\\logs", "skip_nodes_if_on_run_start_fails": false, "state_modified_compare_vars": false, "introspect": true, "empty": false, "favor_state": false, "log_format": "default", "defer": false, "static_parser": true, "partial_parse": true, "show_resource_report": false, "macro_debugging": false, "write_json": true, "profiles_dir": "C:\\Users\\Mattia\\.dbt", "log_format_file": "debug", "exclude": [], "print": true, "log_level_file": "debug", "send_anonymous_usage_stats": true, "require_resource_names_without_spaces": false, "which": "run", "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "log_level": "info", "printer_width": 80, "require_nested_cumulative_type_params": false, "use_colors": true, "warn_error_options": {"include": [], "exclude": []}, "invocation_command": "dbt run --select mart_route_geographic", "project_dir": "C:\\Users\\Mattia\\Business_Challenge\\fair_pricing_radar", "quiet": false, "vars": {}, "populate_cache": true, "require_yaml_configuration_for_mf_time_spines": false, "use_colors_file": true, "indirect_selection": "eager", "require_batched_execution_for_custom_microbatch_strategy": false, "require_explicit_package_overrides_for_builtin_materializations": true, "version_check": true}}