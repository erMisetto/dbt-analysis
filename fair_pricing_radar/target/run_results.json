{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-04-24T23:23:57.557491Z", "invocation_id": "fca25516-d473-4310-bac8-06f05824f021", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-24T23:23:16.743700Z", "completed_at": "2025-04-24T23:23:16.753674Z"}, {"name": "execute", "started_at": "2025-04-24T23:23:16.754671Z", "completed_at": "2025-04-24T23:23:56.527248Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 39.785542249679565, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bbe9bc-0305-0fb8-0006-8fdb0018ca76"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.fair_pricing_radar.mart_dashboard_kpis", "compiled": true, "compiled_code": "\n\n-- 1) Base data: every booking, annotated with alert flags & extra cost\nwith base as (\n\n  select\n    s.legid,\n    s.search_date,\n    s.flight_date,\n    s.route,\n    s.fare_bucket,\n    s.usd_per_mi,\n    coalesce(f.any_rule_flag,         0) as any_alert,\n    coalesce(f.r1_price_outlier,      0) as is_r1_outlier,\n    coalesce(f.r2_seat_scarcity,      0) as is_r2_scarcity,\n    coalesce(f.r3_monopoly_premium,   0) as is_r3_monopoly,\n    coalesce(e.extra_cost,            0) as extra_cost\n\n  from FLIGHT_PRICES.WALRUS_PUBLIC.stg_fare_searches         as s\n  left join FLIGHT_PRICES.WALRUS_PUBLIC.mart_pricing_features as f using (legid)\n  left join FLIGHT_PRICES.WALRUS_PUBLIC.int_flagged_extra_costs as e using (legid)\n\n),\n\n-- 2) Aggregate KPIs over that base set\nkpis as (\n\n  select\n    count(*)                                   as total_bookings,\n    sum(any_alert)                             as total_any_alerts,\n    sum(is_r1_outlier)                         as total_R1_alerts,\n    sum(is_r2_scarcity)                        as total_R2_alerts,\n    sum(is_r3_monopoly)                        as total_R3_alerts,\n\n    round(100.0 * sum(any_alert)/nullif(count(*),0),2)   as pct_any_alerts,\n    round(100.0 * sum(is_r1_outlier)/nullif(count(*),0),2) as pct_R1_outliers,\n    round(100.0 * sum(is_r2_scarcity)/nullif(count(*),0),2) as pct_R2_scarcity,\n    round(100.0 * sum(is_r3_monopoly)/nullif(count(*),0),2) as pct_R3_monopoly,\n\n    sum(extra_cost)                            as total_extra_cost_usd,\n    round(sum(extra_cost)/nullif(sum(any_alert),0),2) as avg_extra_per_alert\n\n  from base\n\n)\n\nselect * from kpis", "relation_name": "FLIGHT_PRICES.WALRUS_PUBLIC.mart_dashboard_kpis", "batch_results": null}], "elapsed_time": 49.888508558273315, "args": {"use_colors_file": true, "partial_parse": true, "log_path": "C:\\Users\\Mattia\\Business_Challenge\\fair_pricing_radar\\logs", "log_file_max_bytes": 10485760, "favor_state": false, "log_level_file": "debug", "print": true, "vars": {}, "skip_nodes_if_on_run_start_fails": false, "printer_width": 80, "which": "run", "state_modified_compare_vars": false, "partial_parse_file_diff": true, "cache_selected_only": false, "require_batched_execution_for_custom_microbatch_strategy": false, "state_modified_compare_more_unrendered_values": false, "exclude": [], "select": ["mart_dashboard_kpis"], "version_check": true, "require_nested_cumulative_type_params": false, "require_yaml_configuration_for_mf_time_spines": false, "show_resource_report": false, "populate_cache": true, "static_parser": true, "use_colors": true, "write_json": true, "defer": false, "require_resource_names_without_spaces": false, "quiet": false, "send_anonymous_usage_stats": true, "project_dir": "C:\\Users\\Mattia\\Business_Challenge\\fair_pricing_radar", "introspect": true, "require_explicit_package_overrides_for_builtin_materializations": true, "strict_mode": false, "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "macro_debugging": false, "profiles_dir": "C:\\Users\\Mattia\\.dbt", "log_format": "default", "log_level": "info", "source_freshness_run_project_hooks": false, "empty": false, "log_format_file": "debug", "invocation_command": "dbt run --select mart_dashboard_kpis"}}